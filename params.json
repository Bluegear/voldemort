{"body":"## Voldemort\r\n\r\nVoldemort is a simple static site generator using Jinja2 and markdown templates.\r\n\r\n## Installation\r\n\r\n    sudo python setup.py install\r\n\r\nor\r\n\r\n\tsudo easy_install -U voldemort\r\n\r\n## Usage Options\r\n\r\n    Usage: voldemort [options]\r\n    \r\n    Options:\r\n      -h, --help            show this help message and exit\r\n      -w WORK_DIR, --work_dir=WORK_DIR\r\n                            Working Directory\r\n      -s, --serve           Start the HTTP Server\r\n      -p PORT, --port=PORT  Port inwhich the HTTPServer should run\r\n      -d, --deploy          Deploy this website\r\n      -u USER, --user=USER  Login name for server\r\n      -a AT, --at=AT        Server address to deploy the site\r\n      -t TO, --to=TO        Deployment directory\r\n      --skip-blog           Skip blog posts generation\r\n      --skip-pages          Skip pages generation\r\n      --skip-tags           Skip tags generation\r\n      --skip-feeds          Skip Atom feed generation\r\n      --skip-sitemap        Skip sitemap generation\r\n\r\n## Usage Example\r\n\r\nGo to the example directory\r\n\r\n\tcd example\r\n\r\nand run\r\n\r\n\tvoldemort\r\n\r\nstart the HTTPServer\r\n\r\n\tvoldemort --serve -p 8080\r\n\r\nOpen your browser and see the website in action.\r\n\r\nDeploy the website\r\n\r\n\tvoldemort --deploy -u foobarnb -a foobarnbaz.com -t /home/foobarnbaz/public_html\r\n\r\n## Writing posts\r\n\r\nPosts mainly contain 2 sections. Config section and the Template section. All data inside two `---` defines the config and are validated as YAML data. You can set your post related attributes here. In template section you can use Jinja2 templates or Markdown in `{% markdown %}` and `{% endmarkdown %}` blocks (You could ignore these blocks if `layout` is defined in the metadata section).\r\n\r\nAs per Voldemort's default configuration, all base templates should be in `layout` and `include` directories. This is not a hard limitation, but kept for preserving the meaning. Posts are written in a directory named `posts`. For example, we have a directory structure as shown below\r\n\r\n\tlayout/\r\n\t\tlisting.html\r\n\t\tpost.html\r\n\tinclude/\r\n\t\tnavigation.html\r\n\tposts/\r\n\t\tvoldemort-is-awesome.markdown\r\n\tindex.html\r\n\tcss/\r\n\t\tscreen.css\r\n\t\tpygments.css\r\n\r\nAnd we have the following data in `layout/listing.html`\r\n\r\n\t<!DOCTYPE html>\r\n\t<html lang=\"en-US\">\r\n\r\n\t<head>\r\n\t<title>foobarnbaz.com - {{ page.title }}</title>\r\n\t{% include \"head-common.html\" %}\r\n\t</head>\r\n\r\n\t<body>\r\n\t<section class=\"page-content\">\r\n\t{% block content %}{% endblock %}\r\n\t</section>\r\n\t</body>\r\n\t</html>\r\n\r\nand `include/header.html` contains\r\n\r\n\t<meta charset=\"UTF-8\" />\r\n\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n\t<meta name=\"author\" content=\"Sreejith K\" />\r\n\r\n\t<link rel=\"alternate\" href=\"http://feeds2.feedburner.com/foobarnbaz\"\r\n\t  title=\"foobarnbaz.com\" type=\"application/atom+xml\" />\r\n\t<link rel=\"stylesheet\" href=\"/css/screen.css\" type=\"text/css\" />\r\n\t<link rel=\"stylesheet\" href=\"/css/pygments.css\" type=\"text/css\" />\r\n\t<link href='/images/layout/favicon.ico' rel='shortcut icon' type='image/ico' />\r\n\r\nWe will be able to write the following `index.html` which generates the front page of your blog with all the posts, paginated with the value provided in `settings.yaml` (defaults to 5).\r\n\r\n\t---\r\n\tpaginate: true\r\n\t---\r\n\t{% extends \"listing.html\" %}\r\n\t{% block content %}\r\n\r\n\t{% for post in paginator.posts %}\r\n\t<article class=\"excerpt\">\r\n\t<header>\r\n\t<h1><a href=\"{{ post.url }}\">{{ post.title }}</a></h1>\r\n\t<time datetime=\"{{ post.date | date_to_string }}\" pubdate=\"pubdate\">\r\n\t{{ post.date.strftime(\"%b %d, %Y\") }}\r\n\t</time>\r\n\t</header>\r\n\r\n\t{% if loop.first %}\r\n\t{{ post.content }}\r\n\t<p class=\"full-post\"><a href=\"{{ post.url }}#comments\">comments...</a></p>\r\n\t{% else %}\r\n\t<p>{{ post.content }}</p>\r\n\t<p class=\"full-post\"><a href=\"{{ post.url }}\">full post...</a></p>\r\n\t{% endif %}\r\n\r\n\t</article>\r\n\t{% endfor %}\r\n\t{% endblock %}\r\n\r\nAnd our sample post `posts/voldemort-is-awesome.markdown`,\r\n\r\n\t---\r\n\ttitle: Voldemort\r\n\tdate: '02-10-2011'\r\n\ttime: '10:45'\r\n\tlayout: 'post.html'\r\n\t---\r\n\t[Voldemort](https://github.com/semk/voldemort) is an awesome static site generator based in Jinja2 and Markdown templates.\r\n\r\nFor more information about templating read the following documentations.\r\n\r\n* Read [Jinja2 Documentation](http://jinja.pocoo.org/docs/templates/)\r\n* Read [Markdown Documentation](http://daringfireball.net/projects/markdown/syntax)\r\n\r\n## Configuration\r\n\r\nYou can change the default settings by editing the `settings.yaml`.\r\n\r\n\tlayout_dirs : \r\n                  - layout\t\t# directory inwhich base tempaltes reside\r\n                  - include\t\t# html code that can be included goes here\r\n\tposts_dir   : posts\t\t\t# directory where you write posts\r\n\tpost_url    : \"%Y/%m/%d\"\t# url to posts. You can alter the order\r\n\tsite_dir    : _site\t\t\t# generated site will be in this directory\r\n\tpaginate    : 5\t\t\t\t# number of pages to be paginated at once\r\n\r\nUser defined data should only be added under `site` as shown below\r\n\r\n\tsite        :\r\n\t    name        : \"Pythoned!\"  \r\n\t    address     : \"http://foobarnbaz.com\"\r\n\t    author_name : \"Sreejith Kesavan\"\r\n\t    author_email: \"sreejithemk@gmail.com\"\r\n\r\nand you may deploy your website to a preferred location or GitHub itself.\r\n\r\n\tdeploy :\r\n    \t\tuser  : semk\r\n    \t\tat    : github.com\r\n    \t\tto    : semk.github.com\r\n\r\n## Global variables\r\n\r\n    site:       User defined variables from settings.yaml. Also includes site.time\r\n                Eg: site.name, site.address, site.time\r\n\r\n\tposts:\t\tA list of all your posts. All attributes in the YAML section \r\n\t\t\t\tcan be accessed either using . or []. \r\n\t\t\t\teg. post['date'], post.date\r\n\t\r\n\tpaginator:\tYou can paginate your posts using this object.\r\n\t\t\t\teg: {% for post in paginator.posts %}\r\n\t\t\t\tAttributes:\r\n\t\t\t\t\tposts:\tlist of posts in this paginator\r\n\t\t\t\t\tcurrent_page\t: current page number (None if not)\r\n\t\t\t\t\tnext_page\t\t: next page number (None if not)\r\n\t\t\t\t\tprevious_page\t: previous page number (None if not)\r\n\t\r\n\tpost:\t\tInfo about the post. Only accessible in posts.\r\n\t\t\t\tAttributes:\r\n\t\t\t\t\tcontent\t\t\t: html content of the post\r\n\t\t\t\t\turl\t\t\t\t: url to this post\r\n\t\t\t\t\tid              : identifier for the post (url)\r\n\t\t\t\t\tnext\t\t\t: points to the next post\r\n\t\t\t\t\tprevious\t\t: points to the previous post\r\n\t\t\t\t\ttags\t\t\t: points to the tags\r\n\t\t\t\tand you can access all the attributes in the config section (eg: post.date)\r\n\t\r\n\tpage:\t\tInfo about a page. Only available in pages other than posts.\r\n\t\t\t\tAttributes:\r\n\t\t\t\t\tcontent\t\t\t: html content of the post\r\n\t\t\t\tand you can access all the attributes in the config section (eg: page.title)\r\n\t\r\n    tags:       Tags for the blog posts. Globally available.\r\n                Eg: You can loop like {% for tag in tags %} and access tag.name, tag.url and tag.posts\r\n\r\n    tag:        Available only to the tag template (Default `tag.html`)\r\n                Usage: {% for post in tag.posts %}\r\n\r\n## Filters\r\n\r\nApart from built-in filters provided by Jinja2, Voldemort provides the following filters to use inside HTML pages.\r\n\r\n    date:                   Format datetime objects.\r\n                                eg. post.date | date(\"%d-%m-%Y\")\r\n    date_to_string:         Convert date to string.\r\n                                eg. \"27 Jan 2011\"\r\n    date_to_long_string:    Format a date in long format.\r\n                                eg. \"27 January 2011\"\r\n    date_to_xmlschema:      Format a date for use in XML.\r\n                                eg. \"2011-04-24T20:34:46+05:30\"\r\n    xml_escape:             Replace special characters \"&\", \"<\" and \">\" to \r\n                                HTML-safe sequences.\r\n    cgi_escape:             CGI escape a string for use in a URL. Replaces any special \r\n                                characters with appropriate %XX replacements.\r\n    uri_escape:             Escape special characters in url.\r\n    number_of_words:        Return number of words in a string.\r\n    excerpt:                Split the html data. Eg: {{ post.content | excerpt(70) }}\r\n\r\n## Developer\r\n\r\nSreejith K <sreejithemk@gmail.com>\r\n\r\nhttp://foobarnbaz.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Voldemort","tagline":"A simple static site generator using Jinja2 and Markdown templates."}